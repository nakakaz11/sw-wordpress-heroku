// Generated by CoffeeScript 1.4.0
"use strict";

var SwSocket, app, b_c, d_d, d_u, d_x, express, http, io, p_u, path, routes, server, _userId;

express = require("express");

routes = require("./routes");

http = require("http");

path = require("path");

app = express();

app.configure(function() {
  app.set('port', process.env.PORT || 3000);
  app.use(express.logger("dev"));
  app.use(express.favicon());
  app.use(express.bodyParser());
  app.use(express.methodOverride());
  app.use(app.router);
  return app.use(express["static"](path.join(__dirname, 'public')));
});

app.configure("development", function() {
  return app.use(express.errorHandler());
});

app.get("/game", routes.game);

app.get("/gameover", routes.gameover);

server = http.createServer(app);

server.listen(app.get("port"), function() {
  return console.info("listening on port " + app.get("port"));
});

io = require("socket.io").listen(server, {
  "log level": 1
});

io.configure(function() {
  io.set("transports", ["xhr-polling"]);
  return io.set("polling duration", 10);
});

SwSocket = (function() {

  function SwSocket() {}

  SwSocket.prototype.make = function(socket, keyname) {
    return socket.on(keyname, function(data) {
      return socket.broadcast.emit(keyname, {
        userId: socket.handshake.userId,
        data: data,
        dd_dt: data,
        dd_x: data,
        ca_cr: data
      });
    });
  };

  return SwSocket;

})();

/*class SwSockClient extends SwSocket  # 一応便宜上 extend
  make: (socket,keyname) ->  # chat with mongoose用
    #super(socket,keyname)  # 親make()
    makeMongo = (socket,keyname) ->  # sendDB
      User.find (err,userMGD) -> # DB read  (err,userMGD)
        if err then console.info "swMongoFind:"+err # log
        socket.json.emit keyname, userMGD   # 自分にイベント送
        socket.broadcast.json.emit keyname, userMGD  # 自分以外に送
    makeMongo(socket,keyname)
    socket.on keyname, (data) ->
      # mongoose -------#
      day = ["Sun","Mon","Tue","Wed","Thu","Fri","Sat"]
      date = new Date()
      y = date.getFullYear()
      t = date.getMonth()+1
      d = date.getDate()
      w = date.getDay()
      h = date.getHours()+9
      m = date.getMinutes()
      s = date.getSeconds()
      if(t < 10)then t ="0"+t
      if(d < 10)then d ="0"+d
      if(h < 10)then h ="0"+h
      if(m < 10)then m ="0"+m
      if(s < 10)then s ="0"+s
      jst = y+"/"+t+"/"+d+" ("+day[w]+") "+h+":"+m  # add Time (UTC to JST)
      userMG = new User
      userMG.userId = socket.handshake.userId
      userMG.playmess = data.playmess
      userMG.date = jst
      userMG.save (err) ->       # DB write
        if err then console.log "swMongoSave:"+err # log
      #sanitized = escapeHTML(data) # これobj前にやんなきゃね。
      makeMongo(socket,keyname)
*/


p_u = new SwSocket;

b_c = new SwSocket;

d_d = new SwSocket;

d_x = new SwSocket;

d_u = new SwSocket;

_userId = 0;

io.sockets.on("connection", function(socket) {
  socket.handshake.userId = _userId;
  _userId++;
  p_u.make(socket, 'player-update');
  b_c.make(socket, 'bullet-create');
  d_d.make(socket, 'dd-create');
  socket.json.emit('dd-create', {
    userId: socket.handshake.userId
  });
  d_x.make(socket, 'dd-x');
  socket.json.emit('dd-back', {
    myId: socket.handshake.userId
  });
  d_u.make(socket, 'disconnect');
  socket.on('deleteDB', function(delid) {
    return User.find({
      userId: delid.userId
    }).remove();
  });
});

/*
coffee -wcb *.coffee

# サニタイズ sanitized = escapeHTML(msg)
escapeHTML = (str) ->
  str.replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/>/g, "&gt;")
*/

